-- mySql 
CREATE TABLE VENDOR_DETAILS (
    ID INT PRIMARY KEY,
    VENDOR_NAME NVARCHAR(255),
    PRODUCT_NAME NVARCHAR(255),
    STREET_NAME NVARCHAR(255),
    CITY NVARCHAR(255),
    STATE CHAR(2),
    ZIP_CODE NVARCHAR(10),
    SELLER_FIRST_NAME NVARCHAR(255),
    SELLER_LAST_NAME NVARCHAR(255),
    SELLER_PHONE NVARCHAR(20),
    SELLER_EMAIL NVARCHAR(255),
    SELLER_URL NVARCHAR(255),
    SELLER_NAME_CHANGE BIT, -- BIT type is used for boolean in MS SQL
    ARTICLE_FiNDING BIT, -- BIT type for boolean values
    ARTICLE_URL NVARCHAR(255),
    PRODUCT_GATEGORY NVARCHAR(255), -- Assuming typo correction to PRODUCT_CATEGORY
    ANNUAL_SALES MONEY, -- MONEY data type for monetary values, adjust as needed
    RATING_SCORE NVARCHAR(10) -- Adjusted for storing textual ratings
    VERIFIED_COMPANY BIT -- BIT type for boolean values 
);

--MS Sql version
CREATE TABLE VENDOR_DETAILS (
    VENDOR_ID INT PRIMARY KEY,
    VENDOR_NAME NVARCHAR(255),
    PRODUCT_NAME NVARCHAR(255),
    STREET_NAME NVARCHAR(255),
    CITY NVARCHAR(255),
    STATE CHAR(2),
    ZIP_CODE NVARCHAR(10),
    SELLER_FIRST_NAME NVARCHAR(255),
    SELLER_LAST_NAME NVARCHAR(255),
    SELLER_PHONE NVARCHAR(20),
    SELLER_EMAIL NVARCHAR(255),
    SELLER_URL NVARCHAR(255),
    SELLER_NAME_CHANGE BIT, -- BIT type is used for boolean in MS SQL
    ARTICLE_FiNDING BIT, -- BIT type for boolean values
    ARTICLE_URL NVARCHAR(255),
    PRODUCT_GATEGORY NVARCHAR(255), -- Assuming typo correction to PRODUCT_CATEGORY
    ANNUAL_SALES MONEY, -- MONEY data type for monetary values, adjust as needed
    RATING_SCORE NVARCHAR(10) -- Adjusted for storing textual ratings
    VERIFIED_COMPANY BIT -- BIT type for boolean values
);

-- create sequense for VENDOR_ID
CREATE SEQUENCE VENDOR_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NO CYCLE;




-- mySql vendor score
SELECT VENDOR_NAME,
       COUNT(*) AS RATING_SCORE,
       CASE
           WHEN COUNT(*) >= 80 THEN 'TOP'
           WHEN COUNT(*) BETWEEN 60 AND 79 THEN 'HIGH'
           WHEN COUNT(*) BETWEEN 40 AND 59 THEN 'MODERATE'
           WHEN COUNT(*) <= 39 THEN 'LOW'
       END AS score_category
FROM VENDOR_DETAILS
GROUP BY VENDOR_NAME
ORDER BY RATING_SCORE DESC;

-- msSql vendor score
SELECT VENDOR_NAME,
       COUNT(*) AS RATING_SCORE,
       CASE
           WHEN COUNT(*) >= 80 THEN 'TOP'
           WHEN COUNT(*) BETWEEN 60 AND 79 THEN 'HIGH'
           WHEN COUNT(*) BETWEEN 40 AND 59 THEN 'MODERATE'
           WHEN COUNT(*) <= 39 THEN 'LOW'
       END AS score_category
FROM VENDOR_DETAILS
GROUP BY VENDOR_NAME
ORDER BY RATING_SCORE DESC;

-- mySql products score
SELECT PRODUCT_NAME,
       COUNT(*) AS VENDOR_SCORE
FROM VENDOR_DETAILS
GROUP BY PRODUCT_NAME
ORDER BY RATING_SCORE DESC;

--MS Sql products score
SELECT PRODUCT_NAME,
       COUNT(*) AS VENDOR_SCORE
FROM VENDOR_DETAILS
GROUP BY PRODUCT_NAME
ORDER BY RATING_SCORE DESC;

-- mySql verified company scoreing
SELECT VERIFIED_COMPANY 
-- Assuming VERIFIED_COMPANY is a boolean column if true add 10 to score
-- if false add 0 to score
-- if null add 0 to score

--MS Sql verified company scoreing


SELECT *
FROM VENDOR_DETAILS
GROUP BY VENDOR_NAME
ORDER BY VERIFIED_COMPANY_SCORE DESC;

SELECT VENDOR_NAME,
       COUNT(*) AS RATING_SCORE,
       CASE
           WHEN COUNT(*) >= 80 THEN 'TOP'
           WHEN COUNT(*) BETWEEN 60 AND 79 THEN 'HIGH'
           WHEN COUNT(*) BETWEEN 40 AND 59 THEN 'MODERATE'
           WHEN COUNT(*) <= 39 THEN 'LOW'
       END AS score_category
FROM VENDOR_DETAILS
GROUP BY VENDOR_NAME
ORDER BY RATING_SCORE DESC;

SELECT 
    VENDOR_NAME,
    COUNT(DISTINCT PRODUCT_NAME) AS Product_Diversity_Score,
    (CASE   WHEN VERIFIED_COMPANY = 0 THEN 10 ELSE 0 END) AS Verified_Company_Score,
    COUNT(DISTINCT PRODUCT_NAME) + (CASE  WHEN VERIFIED_COMPANY = 0 THEN 10 ELSE 0  END) AS Total_Score
FROM VENDOR_DETAILS
GROUP BY VENDOR_NAME, VERIFIED_COMPANY;

